
f_maxSubArray [ 2 ] [ 31 ]
  store s0 0
  store s1 1
  store s2 2
  store s3 3
  store s4 4
  store s5 5
  store s6 6
  store s7 7
  store s8 8
  store s9 9
  store s10 10
  store s11 11
  // t0 = p1 == 0
  t6 = a1 == x0
  store t6 15
  // if t0 == 0 goto l0
  if t6 == x0 goto l0
  // return 0
  a0 = 0
  load 0 s0
  load 1 s1
  load 2 s2
  load 3 s3
  load 4 s4
  load 5 s5
  load 6 s6
  load 7 s7
  load 8 s8
  load 9 s9
  load 10 s10
  load 11 s11
  return
  // l0:
  l0:
  // t1 = p1 == 1
  s0 = 1
  t5 = a1 == s0
  store t5 16
  // if t1 == 0 goto l1
  if t5 == x0 goto l1
  // t2 = 0
  s8 = 0
  store s8 17
  // t3 = 0 * 1
  s0 = 1
  s7 = x0 * s0
  store s7 18
  // t2 = t2 + t3
  s8 = s8 + s7
  store s8 17
  // t2 = t2 * 4
  s0 = 4
  s8 = s8 * s0
  store s8 17
  // t4 = p0 [ t2 ]
  s10 = a0 + s8
  s6 = s10 [ 0 ]
  store s6 19
  // return t4
  a0 = s6
  load 0 s0
  load 1 s1
  load 2 s2
  load 3 s3
  load 4 s4
  load 5 s5
  load 6 s6
  load 7 s7
  load 8 s8
  load 9 s9
  load 10 s10
  load 11 s11
  return
  // l1:
  l1:
  // t5 = 0
  s5 = 0
  store s5 20
  // t6 = 0 * 1
  s0 = 1
  s4 = x0 * s0
  store s4 21
  // t5 = t5 + t6
  s5 = s5 + s4
  store s5 20
  // t5 = t5 * 4
  s0 = 4
  s5 = s5 * s0
  store s5 20
  // t7 = p0 [ t5 ]
  s10 = a0 + s5
  s3 = s10 [ 0 ]
  store s3 22
  // T0 = t7
  t0 = s3
  store t0 12
  // T1 = T0
  s0 = t0
  store s0 13
  // T2 = 1
  s1 = 1
  store s1 14
  // l2:
  l2:
  // t8 = T2 < p1
  load 14 s0
  s2 = s0 < a1
  store s2 23
  // if t8 == 0 goto l3
  if s2 == x0 goto l3
  // t9 = T0 < 0
  load 12 t0
  s1 = t0 < x0
  store s1 24
  // if t9 == 0 goto l4
  if s1 == x0 goto l4
  // T0 = 0
  t0 = 0
  store t0 12
  // l4:
  l4:
  // t11 = 0
  t3 = 0
  store t3 25
  // t12 = T2 * 1
  load 14 s0
  s1 = 1
  t2 = s0 * s1
  store t2 26
  // t11 = t11 + t12
  t3 = t3 + t2
  store t3 25
  // t11 = t11 * 4
  s1 = 4
  t3 = t3 * s1
  store t3 25
  // t13 = p0 [ t11 ]
  s10 = a0 + t3
  t1 = s10 [ 0 ]
  store t1 27
  // t10 = T0 + t13
  load 12 t0
  t4 = t0 + t1
  store t4 28
  // T0 = t10
  t0 = t4
  store t0 12
  // t14 = T1 < T0
  load 13 s1
  store s0 14
  s0 = s1 < t0
  store s0 29
  // if t14 == 0 goto l5
  if s0 == x0 goto l5
  // T1 = T0
  load 12 t0
  s0 = t0
  store s0 13
  // l5:
  l5:
  // t15 = T2 + 1
  load 14 s0
  s1 = 1
  s9 = s0 + s1
  store s9 30
  // T2 = t15
  s0 = s9
  store s0 14
  // goto l2
  goto l2
  // l3:
  l3:
  // return T1
  load 13 s0
  a0 = s0
  load 0 s0
  load 1 s1
  load 2 s2
  load 3 s3
  load 4 s4
  load 5 s5
  load 6 s6
  load 7 s7
  load 8 s8
  load 9 s9
  load 10 s10
  load 11 s11
  return
  // return 0
  a0 = 0
  load 0 s0
  load 1 s1
  load 2 s2
  load 3 s3
  load 4 s4
  load 5 s5
  load 6 s6
  load 7 s7
  load 8 s8
  load 9 s9
  load 10 s10
  load 11 s11
  return
end f_maxSubArray

f_main [ 0 ] [ 49 ]
  // t16 = 0
  s0 = 0
  store s0 33
  // t17 = 0 * 1
  s1 = 1
  s1 = x0 * s1
  store s1 32
  // t16 = t16 + t17
  s0 = s0 + s1
  store s0 33
  // t16 = t16 * 4
  s2 = 4
  s0 = s0 * s2
  store s0 33
  // t18 = -4
  s2 = 4
  s2 = - s2
  store s2 31
  // T4 [ t16 ] = t18
  loadaddr 16 s10
  s10 = s10 + s0
  s10 [ 0 ] = s2
  // t19 = 0
  s3 = 0
  store s3 30
  // t20 = 1 * 1
  s4 = 1
  s5 = 1
  s4 = s4 * s5
  store s4 29
  // t19 = t19 + t20
  s3 = s3 + s4
  store s3 30
  // t19 = t19 * 4
  s5 = 4
  s3 = s3 * s5
  store s3 30
  // T4 [ t19 ] = 3
  s11 = 3
  loadaddr 16 s10
  s10 = s10 + s3
  s10 [ 0 ] = s11
  // t21 = 0
  s5 = 0
  store s5 28
  // t22 = 2 * 1
  s6 = 2
  s7 = 1
  s6 = s6 * s7
  store s6 27
  // t21 = t21 + t22
  s5 = s5 + s6
  store s5 28
  // t21 = t21 * 4
  s7 = 4
  s5 = s5 * s7
  store s5 28
  // T4 [ t21 ] = 9
  s11 = 9
  loadaddr 16 s10
  s10 = s10 + s5
  s10 [ 0 ] = s11
  // t23 = 0
  s7 = 0
  store s7 26
  // t24 = 3 * 1
  s8 = 3
  s9 = 1
  t6 = s8 * s9
  store t6 34
  // t23 = t23 + t24
  s7 = s7 + t6
  store s7 26
  // t23 = t23 * 4
  s8 = 4
  s7 = s7 * s8
  store s7 26
  // t25 = -2
  s8 = 2
  t5 = - s8
  store t5 35
  // T4 [ t23 ] = t25
  loadaddr 16 s10
  s10 = s10 + s7
  s10 [ 0 ] = t5
  // t26 = 0
  t4 = 0
  store t4 36
  // t27 = 4 * 1
  s8 = 4
  s9 = 1
  store s0 33
  s0 = s8 * s9
  store s0 37
  // t26 = t26 + t27
  t4 = t4 + s0
  store t4 36
  // t26 = t26 * 4
  s8 = 4
  t4 = t4 * s8
  store t4 36
  // T4 [ t26 ] = 0
  s11 = 0
  loadaddr 16 s10
  s10 = s10 + t4
  s10 [ 0 ] = s11
  // t28 = 0
  t2 = 0
  store t2 38
  // t29 = 5 * 1
  s8 = 5
  s9 = 1
  t1 = s8 * s9
  store t1 39
  // t28 = t28 + t29
  t2 = t2 + t1
  store t2 38
  // t28 = t28 * 4
  s8 = 4
  t2 = t2 * s8
  store t2 38
  // T4 [ t28 ] = 1
  s11 = 1
  loadaddr 16 s10
  s10 = s10 + t2
  s10 [ 0 ] = s11
  // t30 = 0
  t0 = 0
  store t0 40
  // t31 = 6 * 1
  s8 = 6
  s9 = 1
  s9 = s8 * s9
  store s9 41
  // t30 = t30 + t31
  t0 = t0 + s9
  store t0 40
  // t30 = t30 * 4
  s8 = 4
  t0 = t0 * s8
  store t0 40
  // t32 = -6
  s8 = 6
  s8 = - s8
  store s8 42
  // T4 [ t30 ] = t32
  loadaddr 16 s10
  s10 = s10 + t0
  s10 [ 0 ] = s8
  // t33 = 0
  store s7 26
  s7 = 0
  store s7 43
  // t34 = 7 * 1
  t3 = 7
  store s0 37
  s0 = 1
  store s6 27
  s6 = t3 * s0
  store s6 44
  // t33 = t33 + t34
  s7 = s7 + s6
  store s7 43
  // t33 = t33 * 4
  s0 = 4
  s7 = s7 * s0
  store s7 43
  // T4 [ t33 ] = 5
  s11 = 5
  loadaddr 16 s10
  s10 = s10 + s7
  s10 [ 0 ] = s11
  // t35 = 0
  store s5 28
  s5 = 0
  store s5 45
  // t36 = 8 * 1
  s0 = 8
  t3 = 1
  store s4 29
  s4 = s0 * t3
  store s4 46
  // t35 = t35 + t36
  s5 = s5 + s4
  store s5 45
  // t35 = t35 * 4
  s0 = 4
  s5 = s5 * s0
  store s5 45
  // T4 [ t35 ] = 7
  s11 = 7
  loadaddr 16 s10
  s10 = s10 + s5
  s10 [ 0 ] = s11
  // t37 = 0
  store s3 30
  s3 = 0
  store s3 47
  // t38 = 9 * 1
  s0 = 9
  t3 = 1
  store s2 31
  s2 = s0 * t3
  store s2 48
  // t37 = t37 + t38
  s3 = s3 + s2
  store s3 47
  // t37 = t37 * 4
  s0 = 4
  s3 = s3 * s0
  store s3 47
  // T4 [ t37 ] = 8
  s11 = 8
  loadaddr 16 s10
  s10 = s10 + s3
  s10 [ 0 ] = s11
  // T3 = 10
  t3 = 10
  store t3 15
  // param T4
  // param T3
  // t39 = call f_maxSubArray
  store t0 0
  store t1 1
  store t2 2
  store t3 3
  store t4 4
  store t5 5
  store t6 6
  store a0 7
  store a1 8
  store a2 9
  store a3 10
  store a4 11
  store a5 12
  store a6 13
  store a7 14
  loadaddr 16 a0
  a1 = t3
  call f_maxSubArray
  load 0 t0
  load 1 t1
  load 2 t2
  load 3 t3
  load 4 t4
  load 5 t5
  load 6 t6
  load 8 a1
  load 9 a2
  load 10 a3
  load 11 a4
  load 12 a5
  load 13 a6
  load 14 a7
  store s1 32
  s1 = a0
  load 7 a0
  // T3 = t39
  t3 = s1
  store t3 15
  // return T3
  a0 = t3
  return
  // return 0
  a0 = 0
  return
end f_main
