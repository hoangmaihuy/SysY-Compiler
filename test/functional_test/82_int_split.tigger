  v0 = 0
  v1 = 0

f_split [ 2 ] [ 22 ]
  store s0 0
  store s1 1
  store s2 2
  store s3 3
  store s4 4
  store s5 5
  store s6 6
  store s7 7
  store s8 8
  store s9 9
  store s10 10
  store s11 11
  // t0 = T0 - 1
  load v0 s0
  s1 = 1
  s2 = s0 - s1
  store s2 13
  // T2 = t0
  s1 = s2
  store s1 12
  // l0:
  l0:
  // t2 = -1
  s0 = 1
  s4 = - s0
  store s4 14
  // t1 = T2 != t2
  load 12 s1
  s3 = s1 != s4
  store s3 15
  // if t1 == 0 goto l1
  if s3 == x0 goto l1
  // t3 = 0
  s5 = 0
  store s5 16
  // t4 = T2 * 1
  load 12 s1
  s0 = 1
  s6 = s1 * s0
  store s6 17
  // t3 = t3 + t4
  s5 = s5 + s6
  store s5 16
  // t3 = t3 * 4
  s0 = 4
  s5 = s5 * s0
  store s5 16
  // t5 = p0 % 10
  s0 = 10
  s7 = a0 % s0
  store s7 18
  // p1 [ t3 ] = t5
  s10 = a1 + s5
  s10 [ 0 ] = s7
  // t6 = p0 / 10
  s0 = 10
  s8 = a0 / s0
  store s8 19
  // p0 = t6
  a0 = s8
  store a0 20
  // t7 = T2 - 1
  s0 = 1
  s9 = s1 - s0
  store s9 21
  // T2 = t7
  s1 = s9
  store s1 12
  // goto l0
  goto l0
  // l1:
  l1:
  // return 0
  a0 = 0
  load 0 s0
  load 1 s1
  load 2 s2
  load 3 s3
  load 4 s4
  load 5 s5
  load 6 s6
  load 7 s7
  load 8 s8
  load 9 s9
  load 10 s10
  load 11 s11
  return
  // return 0
  a0 = 0
  load 0 s0
  load 1 s1
  load 2 s2
  load 3 s3
  load 4 s4
  load 5 s5
  load 6 s6
  load 7 s7
  load 8 s8
  load 9 s9
  load 10 s10
  load 11 s11
  return
end f_split

f_main [ 0 ] [ 27 ]
  // T0 = 4
  s0 = 4
  loadaddr v0 s10
  s10 [ 0 ] = s0
  // T1 = 10
  s1 = 10
  loadaddr v1 s10
  s10 [ 0 ] = s1
  // T4 = 1478
  s3 = 1478
  store s3 16
  // param T4
  // param T5
  // t8 = call f_split
  store t0 0
  store t1 1
  store t2 2
  store t3 3
  store t4 4
  store t5 5
  store t6 6
  store a0 7
  store a1 8
  store a2 9
  store a3 10
  store a4 11
  store a5 12
  store a6 13
  store a7 14
  a0 = s3
  loadaddr 17 a1
  call f_split
  load 0 t0
  load 1 t1
  load 2 t2
  load 3 t3
  load 4 t4
  load 5 t5
  load 6 t6
  load 8 a1
  load 9 a2
  load 10 a3
  load 11 a4
  load 12 a5
  load 13 a6
  load 14 a7
  t0 = a0
  load 7 a0
  // T4 = t8
  s3 = t0
  store s3 16
  // T3 = 0
  s2 = 0
  store s2 15
  // l2:
  l2:
  // t9 = T3 < 4
  load 15 s2
  s0 = 4
  t1 = s2 < s0
  store t1 22
  // if t9 == 0 goto l3
  if t1 == x0 goto l3
  // t10 = 0
  s6 = 0
  store s6 23
  // t11 = T3 * 1
  load 15 s2
  s0 = 1
  s7 = s2 * s0
  store s7 24
  // t10 = t10 + t11
  s6 = s6 + s7
  store s6 23
  // t10 = t10 * 4
  s0 = 4
  s6 = s6 * s0
  store s6 23
  // t12 = T5 [ t10 ]
  loadaddr 17 s10
  s10 = s10 + s6
  s8 = s10 [ 0 ]
  store s8 25
  // T6 = t12
  s5 = s8
  store s5 21
  // param T6
  // call f_putint
  store t0 0
  store t1 1
  store t2 2
  store t3 3
  store t4 4
  store t5 5
  store t6 6
  store a0 7
  store a1 8
  store a2 9
  store a3 10
  store a4 11
  store a5 12
  store a6 13
  store a7 14
  a0 = s5
  call f_putint
  load 0 t0
  load 1 t1
  load 2 t2
  load 3 t3
  load 4 t4
  load 5 t5
  load 6 t6
  load 7 a0
  load 8 a1
  load 9 a2
  load 10 a3
  load 11 a4
  load 12 a5
  load 13 a6
  load 14 a7
  // param T1
  // call f_putch
  store t0 0
  store t1 1
  store t2 2
  store t3 3
  store t4 4
  store t5 5
  store t6 6
  store a0 7
  store a1 8
  store a2 9
  store a3 10
  store a4 11
  store a5 12
  store a6 13
  store a7 14
  load v1 a0
  call f_putch
  load 0 t0
  load 1 t1
  load 2 t2
  load 3 t3
  load 4 t4
  load 5 t5
  load 6 t6
  load 7 a0
  load 8 a1
  load 9 a2
  load 10 a3
  load 11 a4
  load 12 a5
  load 13 a6
  load 14 a7
  // t13 = T3 + 1
  s0 = 1
  s9 = s2 + s0
  store s9 26
  // T3 = t13
  s2 = s9
  store s2 15
  // goto l2
  goto l2
  // l3:
  l3:
  // return 0
  a0 = 0
  return
  // return 0
  a0 = 0
  return
end f_main
