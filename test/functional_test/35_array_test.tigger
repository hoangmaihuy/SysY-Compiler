  v0 = malloc 8

f_func [ 1 ] [ 19 ]
  store s0 0
  store s1 1
  store s2 2
  store s3 3
  store s4 4
  store s5 5
  store s6 6
  store s7 7
  store s8 8
  store s9 9
  store s10 10
  store s11 11
  // t1 = 0
  s2 = 0
  store s2 12
  // t2 = 0 * 1
  s0 = 1
  s3 = x0 * s0
  store s3 13
  // t1 = t1 + t2
  s2 = s2 + s3
  store s2 12
  // t1 = t1 * 4
  s0 = 4
  s2 = s2 * s0
  store s2 12
  // t3 = T0 [ t1 ]
  loadaddr v0 s0
  s10 = s0 + s2
  s4 = s10 [ 0 ]
  store s4 14
  // t0 = 3 - t3
  s1 = 3
  s1 = s1 - s4
  store s1 15
  // t4 = 0
  s5 = 0
  store s5 16
  // t5 = t0 * 1
  s6 = 1
  s6 = s1 * s6
  store s6 17
  // t4 = t4 + t5
  s5 = s5 + s6
  store s5 16
  // t4 = t4 * 4
  s7 = 4
  s5 = s5 * s7
  store s5 16
  // t6 = p0 [ t4 ]
  s10 = a0 + s5
  s7 = s10 [ 0 ]
  store s7 18
  // return t6
  a0 = s7
  load 0 s0
  load 1 s1
  load 2 s2
  load 3 s3
  load 4 s4
  load 5 s5
  load 6 s6
  load 7 s7
  load 8 s8
  load 9 s9
  load 10 s10
  load 11 s11
  return
  // return 0
  a0 = 0
  load 0 s0
  load 1 s1
  load 2 s2
  load 3 s3
  load 4 s4
  load 5 s5
  load 6 s6
  load 7 s7
  load 8 s8
  load 9 s9
  load 10 s10
  load 11 s11
  return
end f_func

f_main [ 0 ] [ 41 ]
  // t7 = 0
  s3 = 0
  store s3 26
  // t8 = 0 * 1
  s0 = 1
  s2 = x0 * s0
  store s2 27
  // t7 = t7 + t8
  s3 = s3 + s2
  store s3 26
  // t7 = t7 * 4
  s0 = 4
  s3 = s3 * s0
  store s3 26
  // T0 [ t7 ] = 1
  s11 = 1
  loadaddr v0 t3
  s10 = t3 + s3
  s10 [ 0 ] = s11
  // t9 = 0
  s1 = 0
  store s1 28
  // t10 = 1 * 1
  s0 = 1
  s4 = 1
  s0 = s0 * s4
  store s0 25
  // t9 = t9 + t10
  s1 = s1 + s0
  store s1 28
  // t9 = t9 * 4
  s4 = 4
  s1 = s1 * s4
  store s1 28
  // T0 [ t9 ] = 2
  s11 = 2
  s10 = t3 + s1
  s10 [ 0 ] = s11
  // t11 = 0 + 0
  s4 = x0 + x0
  store s4 24
  // t12 = 0
  s5 = 0
  store s5 23
  // t13 = t11 * 1
  s6 = 1
  s6 = s4 * s6
  store s6 22
  // t12 = t12 + t13
  s5 = s5 + s6
  store s5 23
  // t12 = t12 * 4
  s7 = 4
  s5 = s5 * s7
  store s5 23
  // t14 = -1
  s7 = 1
  s7 = - s7
  store s7 21
  // T2 [ t12 ] = t14
  loadaddr 16 s10
  s10 = s10 + s5
  s10 [ 0 ] = s7
  // t15 = 0
  s8 = 0
  store s8 20
  // t16 = 1 * 1
  s9 = 1
  t0 = 1
  t6 = s9 * t0
  store t6 29
  // t15 = t15 + t16
  s8 = s8 + t6
  store s8 20
  // t15 = t15 * 4
  s9 = 4
  s8 = s8 * s9
  store s8 20
  // t17 = 0
  t5 = 0
  store t5 30
  // t18 = 0 * 1
  s9 = 1
  t4 = x0 * s9
  store t4 31
  // t17 = t17 + t18
  t5 = t5 + t4
  store t5 30
  // t17 = t17 * 4
  s9 = 4
  t5 = t5 * s9
  store t5 30
  // t19 = T2 [ t17 ]
  store s0 25
  loadaddr 16 s10
  s10 = s10 + t5
  s0 = s10 [ 0 ]
  store s0 32
  // t20 = t19 - 2
  s9 = 2
  t2 = s0 - s9
  store t2 33
  // T2 [ t15 ] = t20
  loadaddr 16 s10
  s10 = s10 + s8
  s10 [ 0 ] = t2
  // t21 = 0
  t1 = 0
  store t1 34
  // t22 = 1 * 1
  s9 = 1
  t0 = 1
  t0 = s9 * t0
  store t0 35
  // t21 = t21 + t22
  t1 = t1 + t0
  store t1 34
  // t21 = t21 * 4
  s9 = 4
  t1 = t1 * s9
  store t1 34
  // t23 = T2 [ t21 ]
  loadaddr 16 s10
  s10 = s10 + t1
  s9 = s10 [ 0 ]
  store s9 36
  // T3 = t23
  store s0 32
  s0 = s9
  store s0 19
  // t24 = 0
  store s8 20
  s8 = 0
  store s8 37
  // t25 = 2 * 1
  store s0 19
  s0 = 2
  store s1 28
  s1 = 1
  store s7 21
  s7 = s0 * s1
  store s7 38
  // t24 = t24 + t25
  s8 = s8 + s7
  store s8 37
  // t24 = t24 * 4
  s0 = 4
  s8 = s8 * s0
  store s8 37
  // T2 [ t24 ] = 16
  s11 = 16
  loadaddr 16 s10
  s10 = s10 + s8
  s10 [ 0 ] = s11
  // param T2
  // t26 = call f_func
  store t0 0
  store t1 1
  store t2 2
  store t3 3
  store t4 4
  store t5 5
  store t6 6
  store a0 7
  store a1 8
  store a2 9
  store a3 10
  store a4 11
  store a5 12
  store a6 13
  store a7 14
  loadaddr 16 a0
  call f_func
  load 0 t0
  load 1 t1
  load 2 t2
  load 3 t3
  load 4 t4
  load 5 t5
  load 6 t6
  load 8 a1
  load 9 a2
  load 10 a3
  load 11 a4
  load 12 a5
  load 13 a6
  load 14 a7
  store s6 22
  s6 = a0
  load 7 a0
  // t27 = t26 + 2
  s0 = 2
  store s5 23
  s5 = s6 + s0
  store s5 39
  // t28 = t27 + T3
  load 19 s0
  store s4 24
  s4 = s5 + s0
  store s4 40
  // return t28
  a0 = s4
  return
  // return 0
  a0 = 0
  return
end f_main
