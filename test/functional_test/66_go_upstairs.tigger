
f_climbStairs [ 1 ] [ 47 ]
  store s0 0
  store s1 1
  store s2 2
  store s3 3
  store s4 4
  store s5 5
  store s6 6
  store s7 7
  store s8 8
  store s9 9
  store s10 10
  store s11 11
  // t0 = p0 < 4
  s0 = 4
  s0 = a0 < s0
  store s0 30
  // if t0 == 0 goto l0
  if s0 == x0 goto l0
  // return p0
  a0 = a0
  load 0 s0
  load 1 s1
  load 2 s2
  load 3 s3
  load 4 s4
  load 5 s5
  load 6 s6
  load 7 s7
  load 8 s8
  load 9 s9
  load 10 s10
  load 11 s11
  return
  // l0:
  l0:
  // t1 = 0
  s0 = 0
  store s0 29
  // t2 = 0 * 1
  s1 = 1
  t2 = x0 * s1
  store t2 31
  // t1 = t1 + t2
  s0 = s0 + t2
  store s0 29
  // t1 = t1 * 4
  s1 = 4
  s0 = s0 * s1
  store s0 29
  // T0 [ t1 ] = 0
  s11 = 0
  loadaddr 12 s10
  s10 = s10 + s0
  s10 [ 0 ] = s11
  // t3 = 0
  s7 = 0
  store s7 32
  // t4 = 1 * 1
  s1 = 1
  s2 = 1
  s6 = s1 * s2
  store s6 33
  // t3 = t3 + t4
  s7 = s7 + s6
  store s7 32
  // t3 = t3 * 4
  s1 = 4
  s7 = s7 * s1
  store s7 32
  // T0 [ t3 ] = 1
  s11 = 1
  loadaddr 12 s10
  s10 = s10 + s7
  s10 [ 0 ] = s11
  // t5 = 0
  s5 = 0
  store s5 34
  // t6 = 2 * 1
  s1 = 2
  s2 = 1
  s4 = s1 * s2
  store s4 35
  // t5 = t5 + t6
  s5 = s5 + s4
  store s5 34
  // t5 = t5 * 4
  s1 = 4
  s5 = s5 * s1
  store s5 34
  // T0 [ t5 ] = 2
  s11 = 2
  loadaddr 12 s10
  s10 = s10 + s5
  s10 [ 0 ] = s11
  // T1 = 3
  s1 = 3
  store s1 22
  // l1:
  l1:
  // t8 = p0 + 1
  s0 = 1
  s2 = a0 + s0
  store s2 36
  // t7 = T1 < t8
  load 22 s0
  s3 = s0 < s2
  store s3 37
  // if t7 == 0 goto l2
  if s3 == x0 goto l2
  // t9 = 0
  s1 = 0
  store s1 38
  // t10 = T1 * 1
  load 22 s0
  s2 = 1
  s2 = s0 * s2
  store s2 28
  // t9 = t9 + t10
  s1 = s1 + s2
  store s1 38
  // t9 = t9 * 4
  s3 = 4
  s1 = s1 * s3
  store s1 38
  // t11 = T1 - 1
  s3 = 1
  s3 = s0 - s3
  store s3 27
  // t12 = 0
  s4 = 0
  store s4 26
  // t13 = t11 * 1
  s5 = 1
  s5 = s3 * s5
  store s5 25
  // t12 = t12 + t13
  s4 = s4 + s5
  store s4 26
  // t12 = t12 * 4
  s6 = 4
  s4 = s4 * s6
  store s4 26
  // t14 = T0 [ t12 ]
  loadaddr 12 s10
  s10 = s10 + s4
  s6 = s10 [ 0 ]
  store s6 24
  // t16 = T1 - 2
  s7 = 2
  t6 = s0 - s7
  store t6 39
  // t17 = 0
  t5 = 0
  store t5 40
  // t18 = t16 * 1
  s7 = 1
  t4 = t6 * s7
  store t4 41
  // t17 = t17 + t18
  t5 = t5 + t4
  store t5 40
  // t17 = t17 * 4
  s7 = 4
  t5 = t5 * s7
  store t5 40
  // t19 = T0 [ t17 ]
  store s0 22
  loadaddr 12 s10
  s10 = s10 + t5
  s0 = s10 [ 0 ]
  store s0 42
  // t15 = t14 + t19
  s7 = s6 + s0
  store s7 23
  // T0 [ t9 ] = t15
  loadaddr 12 s10
  s10 = s10 + s1
  s10 [ 0 ] = s7
  // t20 = T1 + 1
  load 22 s8
  s9 = 1
  t1 = s8 + s9
  store t1 43
  // T1 = t20
  s8 = t1
  store s8 22
  // goto l1
  goto l1
  // l2:
  l2:
  // t21 = 0
  t0 = 0
  store t0 44
  // t22 = p0 * 1
  s0 = 1
  s9 = a0 * s0
  store s9 45
  // t21 = t21 + t22
  t0 = t0 + s9
  store t0 44
  // t21 = t21 * 4
  s0 = 4
  t0 = t0 * s0
  store t0 44
  // t23 = T0 [ t21 ]
  loadaddr 12 s10
  s10 = s10 + t0
  s8 = s10 [ 0 ]
  store s8 46
  // return t23
  a0 = s8
  load 0 s0
  load 1 s1
  load 2 s2
  load 3 s3
  load 4 s4
  load 5 s5
  load 6 s6
  load 7 s7
  load 8 s8
  load 9 s9
  load 10 s10
  load 11 s11
  return
  // return 0
  a0 = 0
  load 0 s0
  load 1 s1
  load 2 s2
  load 3 s3
  load 4 s4
  load 5 s5
  load 6 s6
  load 7 s7
  load 8 s8
  load 9 s9
  load 10 s10
  load 11 s11
  return
end f_climbStairs

f_main [ 0 ] [ 17 ]
  // T3 = 5
  s1 = 5
  store s1 16
  // param T3
  // t24 = call f_climbStairs
  store t0 0
  store t1 1
  store t2 2
  store t3 3
  store t4 4
  store t5 5
  store t6 6
  store a0 7
  store a1 8
  store a2 9
  store a3 10
  store a4 11
  store a5 12
  store a6 13
  store a7 14
  a0 = s1
  call f_climbStairs
  load 0 t0
  load 1 t1
  load 2 t2
  load 3 t3
  load 4 t4
  load 5 t5
  load 6 t6
  load 8 a1
  load 9 a2
  load 10 a3
  load 11 a4
  load 12 a5
  load 13 a6
  load 14 a7
  s2 = a0
  load 7 a0
  // T2 = t24
  s0 = s2
  store s0 15
  // return T2
  a0 = s0
  return
  // return 0
  a0 = 0
  return
end f_main
