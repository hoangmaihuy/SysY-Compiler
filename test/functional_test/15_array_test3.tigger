  v0 = malloc 100

f_func [ 1 ] [ 23 ]
  store s0 0
  store s1 1
  store s2 2
  store s3 3
  store s4 4
  store s5 5
  store s6 6
  store s7 7
  store s8 8
  store s9 9
  store s10 10
  store s11 11
  // T1 = 0
  s0 = 0
  store s0 12
  // T2 = 0
  s1 = 0
  store s1 13
  // T3 = 0
  s2 = 0
  store s2 14
  // l0:
  l0:
  // t0 = T1 < 5
  load 12 s0
  s1 = 5
  s3 = s0 < s1
  store s3 15
  // if t0 == 0 goto l1
  if s3 == x0 goto l1
  // l2:
  l2:
  // t1 = T2 < 5
  load 13 s1
  s0 = 5
  s4 = s1 < s0
  store s4 16
  // if t1 == 0 goto l3
  if s4 == x0 goto l3
  // t3 = 0
  s6 = 0
  store s6 17
  // t4 = T1 * 5
  load 12 s0
  s1 = 5
  s7 = s0 * s1
  store s7 18
  // t3 = t3 + t4
  s6 = s6 + s7
  store s6 17
  // t4 = T2 * 1
  load 13 s1
  s2 = 1
  s7 = s1 * s2
  store s7 18
  // t3 = t3 + t4
  s6 = s6 + s7
  store s6 17
  // t3 = t3 * 4
  s2 = 4
  s6 = s6 * s2
  store s6 17
  // t5 = p0 [ t3 ]
  s10 = a0 + s6
  s8 = s10 [ 0 ]
  store s8 19
  // t2 = T3 + t5
  load 14 s2
  s5 = s2 + s8
  store s5 20
  // T3 = t2
  s2 = s5
  store s2 14
  // t6 = T2 + 1
  s3 = 1
  s9 = s1 + s3
  store s9 21
  // T2 = t6
  s1 = s9
  store s1 13
  // goto l2
  goto l2
  // l3:
  l3:
  // t7 = T1 + 1
  load 12 s0
  s1 = 1
  t0 = s0 + s1
  store t0 22
  // T1 = t7
  s0 = t0
  store s0 12
  // goto l0
  goto l0
  // l1:
  l1:
  // return T3
  load 14 s2
  a0 = s2
  load 0 s0
  load 1 s1
  load 2 s2
  load 3 s3
  load 4 s4
  load 5 s5
  load 6 s6
  load 7 s7
  load 8 s8
  load 9 s9
  load 10 s10
  load 11 s11
  return
  // return 0
  a0 = 0
  load 0 s0
  load 1 s1
  load 2 s2
  load 3 s3
  load 4 s4
  load 5 s5
  load 6 s6
  load 7 s7
  load 8 s8
  load 9 s9
  load 10 s10
  load 11 s11
  return
end f_func

f_main [ 0 ] [ 15 ]
  // T0 [ 0 ] = 0
  s11 = 0
  loadaddr v0 s1
  s1 [ 0 ] = s11
  // T0 [ 4 ] = 0
  s11 = 0
  s1 [ 4 ] = s11
  // T0 [ 8 ] = 0
  s11 = 0
  s1 [ 8 ] = s11
  // T0 [ 12 ] = 0
  s11 = 0
  s1 [ 12 ] = s11
  // T0 [ 16 ] = 0
  s11 = 0
  s1 [ 16 ] = s11
  // T0 [ 20 ] = 0
  s11 = 0
  s1 [ 20 ] = s11
  // T0 [ 24 ] = 0
  s11 = 0
  s1 [ 24 ] = s11
  // T0 [ 28 ] = 0
  s11 = 0
  s1 [ 28 ] = s11
  // T0 [ 32 ] = 0
  s11 = 0
  s1 [ 32 ] = s11
  // T0 [ 36 ] = 0
  s11 = 0
  s1 [ 36 ] = s11
  // T0 [ 40 ] = 0
  s11 = 0
  s1 [ 40 ] = s11
  // T0 [ 44 ] = 0
  s11 = 0
  s1 [ 44 ] = s11
  // T0 [ 48 ] = 0
  s11 = 0
  s1 [ 48 ] = s11
  // T0 [ 52 ] = 0
  s11 = 0
  s1 [ 52 ] = s11
  // T0 [ 56 ] = 0
  s11 = 0
  s1 [ 56 ] = s11
  // T0 [ 60 ] = 0
  s11 = 0
  s1 [ 60 ] = s11
  // T0 [ 64 ] = 0
  s11 = 0
  s1 [ 64 ] = s11
  // T0 [ 68 ] = 0
  s11 = 0
  s1 [ 68 ] = s11
  // T0 [ 72 ] = 0
  s11 = 0
  s1 [ 72 ] = s11
  // T0 [ 76 ] = 0
  s11 = 0
  s1 [ 76 ] = s11
  // T0 [ 80 ] = 0
  s11 = 0
  s1 [ 80 ] = s11
  // T0 [ 84 ] = 0
  s11 = 0
  s1 [ 84 ] = s11
  // T0 [ 88 ] = 0
  s11 = 0
  s1 [ 88 ] = s11
  // T0 [ 92 ] = 0
  s11 = 0
  s1 [ 92 ] = s11
  // T0 [ 96 ] = 0
  s11 = 0
  s1 [ 96 ] = s11
  // T0 [ 0 ] = 1
  s11 = 1
  s1 [ 0 ] = s11
  // T0 [ 4 ] = 2
  s11 = 2
  s1 [ 4 ] = s11
  // T0 [ 8 ] = 3
  s11 = 3
  s1 [ 8 ] = s11
  // T0 [ 12 ] = 4
  s11 = 4
  s1 [ 12 ] = s11
  // T0 [ 16 ] = 5
  s11 = 5
  s1 [ 16 ] = s11
  // param T0
  // t8 = call f_func
  store t0 0
  store t1 1
  store t2 2
  store t3 3
  store t4 4
  store t5 5
  store t6 6
  store a0 7
  store a1 8
  store a2 9
  store a3 10
  store a4 11
  store a5 12
  store a6 13
  store a7 14
  a0 = s1
  call f_func
  load 0 t0
  load 1 t1
  load 2 t2
  load 3 t3
  load 4 t4
  load 5 t5
  load 6 t6
  load 8 a1
  load 9 a2
  load 10 a3
  load 11 a4
  load 12 a5
  load 13 a6
  load 14 a7
  s0 = a0
  load 7 a0
  // param t8
  // call f_putint
  store t0 0
  store t1 1
  store t2 2
  store t3 3
  store t4 4
  store t5 5
  store t6 6
  store a0 7
  store a1 8
  store a2 9
  store a3 10
  store a4 11
  store a5 12
  store a6 13
  store a7 14
  a0 = s0
  call f_putint
  load 0 t0
  load 1 t1
  load 2 t2
  load 3 t3
  load 4 t4
  load 5 t5
  load 6 t6
  load 7 a0
  load 8 a1
  load 9 a2
  load 10 a3
  load 11 a4
  load 12 a5
  load 13 a6
  load 14 a7
  // return 0
  a0 = 0
  return
  // return 0
  a0 = 0
  return
end f_main
