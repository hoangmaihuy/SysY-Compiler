
f_uniquePaths [ 2 ] [ 68 ]
  store s0 0
  store s1 1
  store s2 2
  store s3 3
  store s4 4
  store s5 5
  store s6 6
  store s7 7
  store s8 8
  store s9 9
  store s10 10
  store s11 11
  // t0 = p0 == 1
  s0 = 1
  s0 = a0 == s0
  store s0 31
  // t1 = t0
  s1 = s0
  store s1 32
  // if t1 != 0 goto l0
  if s1 != x0 goto l0
  // t2 = p1 == 1
  s0 = 1
  s0 = a1 == s0
  store s0 42
  // t1 = t1 || t2
  load 32 s1
  s1 = s1 || s0
  store s1 32
  // l0:
  l0:
  // if t1 == 0 goto l1
  load 32 s0
  if s0 == x0 goto l1
  // return 1
  a0 = 1
  load 0 s0
  load 1 s1
  load 2 s2
  load 3 s3
  load 4 s4
  load 5 s5
  load 6 s6
  load 7 s7
  load 8 s8
  load 9 s9
  load 10 s10
  load 11 s11
  return
  // l1:
  l1:
  // T1 = 0
  s0 = 0
  store s0 21
  // l2:
  l2:
  // t3 = T1 < p0
  load 21 s0
  s2 = s0 < a0
  store s2 51
  // if t3 == 0 goto l3
  if s2 == x0 goto l3
  // t4 = T1 * 3
  load 21 s0
  s1 = 3
  t3 = s0 * s1
  store t3 52
  // t5 = t4 + p1
  s1 = t3 + a1
  store s1 25
  // t6 = t5 - 1
  s2 = 1
  s2 = s1 - s2
  store s2 26
  // t7 = 0
  s3 = 0
  store s3 27
  // t8 = t6 * 1
  s4 = 1
  s4 = s2 * s4
  store s4 28
  // t7 = t7 + t8
  s3 = s3 + s4
  store s3 27
  // t7 = t7 * 4
  s5 = 4
  s3 = s3 * s5
  store s3 27
  // T0 [ t7 ] = 1
  s11 = 1
  loadaddr 12 s10
  s10 = s10 + s3
  s10 [ 0 ] = s11
  // t9 = T1 + 1
  s5 = 1
  s5 = s0 + s5
  store s5 29
  // T1 = t9
  s0 = s5
  store s0 21
  // goto l2
  goto l2
  // l3:
  l3:
  // T1 = 0
  s0 = 0
  store s0 21
  // l4:
  l4:
  // t10 = T1 < p1
  load 21 s0
  s1 = s0 < a1
  store s1 33
  // if t10 == 0 goto l5
  if s1 == x0 goto l5
  // t11 = p0 - 1
  s0 = 1
  s0 = a0 - s0
  store s0 34
  // t12 = t11 * 3
  s1 = 3
  s1 = s0 * s1
  store s1 35
  // t13 = t12 + T1
  load 21 s2
  s3 = s1 + s2
  store s3 36
  // t14 = 0
  s4 = 0
  store s4 37
  // t15 = t13 * 1
  s5 = 1
  s5 = s3 * s5
  store s5 38
  // t14 = t14 + t15
  s4 = s4 + s5
  store s4 37
  // t14 = t14 * 4
  s6 = 4
  s4 = s4 * s6
  store s4 37
  // T0 [ t14 ] = 1
  s11 = 1
  loadaddr 12 s10
  s10 = s10 + s4
  s10 [ 0 ] = s11
  // t16 = T1 + 1
  s6 = 1
  s6 = s2 + s6
  store s6 39
  // T1 = t16
  s2 = s6
  store s2 21
  // goto l4
  goto l4
  // l5:
  l5:
  // t17 = p0 - 2
  s0 = 2
  s0 = a0 - s0
  store s0 30
  // T1 = t17
  s1 = s0
  store s1 21
  // l6:
  l6:
  // t19 = -1
  s0 = 1
  s0 = - s0
  store s0 41
  // t18 = T1 > t19
  load 21 s1
  s2 = s1 > s0
  store s2 40
  // if t18 == 0 goto l7
  if s2 == x0 goto l7
  // t20 = p1 - 2
  s0 = 2
  s0 = a1 - s0
  store s0 43
  // T2 = t20
  s1 = s0
  store s1 22
  // l8:
  l8:
  // t22 = -1
  s0 = 1
  s0 = - s0
  store s0 45
  // t21 = T2 > t22
  load 22 s1
  s2 = s1 > s0
  store s2 44
  // if t21 == 0 goto l9
  if s2 == x0 goto l9
  // t23 = T1 * 3
  load 21 s0
  s1 = 3
  s1 = s0 * s1
  store s1 46
  // t24 = t23 + T2
  load 22 s2
  s3 = s1 + s2
  store s3 47
  // t25 = 0
  s4 = 0
  store s4 48
  // t26 = t24 * 1
  s5 = 1
  s5 = s3 * s5
  store s5 49
  // t25 = t25 + t26
  s4 = s4 + s5
  store s4 48
  // t25 = t25 * 4
  s6 = 4
  s4 = s4 * s6
  store s4 48
  // t27 = T1 + 1
  s6 = 1
  s6 = s0 + s6
  store s6 50
  // t28 = t27 * 3
  s7 = 3
  t2 = s6 * s7
  store t2 53
  // t29 = t28 + T2
  store s1 46
  s1 = t2 + s2
  store s1 54
  // t30 = 0
  store s3 47
  s3 = 0
  store s3 55
  // t31 = t29 * 1
  s7 = 1
  store s4 48
  s4 = s1 * s7
  store s4 56
  // t30 = t30 + t31
  s3 = s3 + s4
  store s3 55
  // t30 = t30 * 4
  s7 = 4
  s3 = s3 * s7
  store s3 55
  // t32 = T0 [ t30 ]
  store s5 49
  loadaddr 12 s10
  s10 = s10 + s3
  s5 = s10 [ 0 ]
  store s5 57
  // t34 = T1 * 3
  s7 = 3
  s7 = s0 * s7
  store s7 58
  // t35 = t34 + T2
  s8 = s7 + s2
  store s8 59
  // t36 = t35 + 1
  s9 = 1
  s9 = s8 + s9
  store s9 60
  // t37 = 0
  t0 = 0
  store t0 61
  // t38 = t36 * 1
  t1 = 1
  t1 = s9 * t1
  store t1 62
  // t37 = t37 + t38
  t0 = t0 + t1
  store t0 61
  // t37 = t37 * 4
  t3 = 4
  t0 = t0 * t3
  store t0 61
  // t39 = T0 [ t37 ]
  store s0 21
  loadaddr 12 s10
  s10 = s10 + t0
  s0 = s10 [ 0 ]
  store s0 63
  // t33 = t32 + t39
  store s6 50
  s6 = s5 + s0
  store s6 64
  // T0 [ t25 ] = t33
  load 48 t3
  loadaddr 12 s10
  s10 = s10 + t3
  s10 [ 0 ] = s6
  // t40 = T2 - 1
  t4 = 1
  t4 = s2 - t4
  store t4 65
  // T2 = t40
  s2 = t4
  store s2 22
  // goto l8
  goto l8
  // l9:
  l9:
  // t41 = T1 - 1
  load 21 s0
  s1 = 1
  t5 = s0 - s1
  store t5 66
  // T1 = t41
  s0 = t5
  store s0 21
  // goto l6
  goto l6
  // l7:
  l7:
  // t42 = 0
  t6 = 0
  store t6 67
  // t43 = 0 * 1
  s0 = 1
  s0 = x0 * s0
  store s0 23
  // t42 = t42 + t43
  t6 = t6 + s0
  store t6 67
  // t42 = t42 * 4
  s1 = 4
  t6 = t6 * s1
  store t6 67
  // t44 = T0 [ t42 ]
  loadaddr 12 s10
  s10 = s10 + t6
  s1 = s10 [ 0 ]
  store s1 24
  // return t44
  a0 = s1
  load 0 s0
  load 1 s1
  load 2 s2
  load 3 s3
  load 4 s4
  load 5 s5
  load 6 s6
  load 7 s7
  load 8 s8
  load 9 s9
  load 10 s10
  load 11 s11
  return
  // return 0
  a0 = 0
  load 0 s0
  load 1 s1
  load 2 s2
  load 3 s3
  load 4 s4
  load 5 s5
  load 6 s6
  load 7 s7
  load 8 s8
  load 9 s9
  load 10 s10
  load 11 s11
  return
end f_uniquePaths

f_main [ 0 ] [ 17 ]
  // T4 = 3
  s1 = 3
  store s1 16
  // param T4
  // param T4
  // t45 = call f_uniquePaths
  store t0 0
  store t1 1
  store t2 2
  store t3 3
  store t4 4
  store t5 5
  store t6 6
  store a0 7
  store a1 8
  store a2 9
  store a3 10
  store a4 11
  store a5 12
  store a6 13
  store a7 14
  a0 = s1
  a1 = s1
  call f_uniquePaths
  load 0 t0
  load 1 t1
  load 2 t2
  load 3 t3
  load 4 t4
  load 5 t5
  load 6 t6
  load 8 a1
  load 9 a2
  load 10 a3
  load 11 a4
  load 12 a5
  load 13 a6
  load 14 a7
  s2 = a0
  load 7 a0
  // T3 = t45
  s0 = s2
  store s0 15
  // return T3
  a0 = s0
  return
  // return 0
  a0 = 0
  return
end f_main
