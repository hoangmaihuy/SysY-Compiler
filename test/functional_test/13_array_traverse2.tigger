  v0 = malloc 108

f_main [ 0 ] [ 13 ]
  // T1 = 0
  s1 = 0
  store s1 0
  // T2 = 0
  s2 = 0
  store s2 1
  // T3 = 0
  s3 = 0
  store s3 2
  // T4 = 0
  s4 = 0
  store s4 3
  // l0:
  l0:
  // t0 = T1 < 3
  load 0 s1
  s0 = 3
  s5 = s1 < s0
  store s5 4
  // if t0 == 0 goto l1
  if s5 == x0 goto l1
  // l2:
  l2:
  // t1 = T2 < 3
  load 1 s2
  s0 = 3
  s6 = s2 < s0
  store s6 5
  // if t1 == 0 goto l3
  if s6 == x0 goto l3
  // l4:
  l4:
  // t2 = T3 < 3
  load 2 s3
  s0 = 3
  s7 = s3 < s0
  store s7 6
  // if t2 == 0 goto l5
  if s7 == x0 goto l5
  // t3 = 0
  s8 = 0
  store s8 7
  // t4 = T1 * 9
  load 0 s1
  s0 = 9
  s9 = s1 * s0
  store s9 8
  // t3 = t3 + t4
  s8 = s8 + s9
  store s8 7
  // t4 = T2 * 3
  load 1 s2
  s0 = 3
  s9 = s2 * s0
  store s9 8
  // t3 = t3 + t4
  s8 = s8 + s9
  store s8 7
  // t4 = T3 * 1
  load 2 s3
  s0 = 1
  s9 = s3 * s0
  store s9 8
  // t3 = t3 + t4
  s8 = s8 + s9
  store s8 7
  // t3 = t3 * 4
  s0 = 4
  s8 = s8 * s0
  store s8 7
  // T0 [ t3 ] = T4
  load 3 s4
  loadaddr v0 s0
  s10 = s0 + s8
  s10 [ 0 ] = s4
  // t5 = T4 + 1
  s5 = 1
  t0 = s4 + s5
  store t0 9
  // T4 = t5
  s4 = t0
  store s4 3
  // t6 = T3 + 1
  s5 = 1
  t1 = s3 + s5
  store t1 10
  // T3 = t6
  s3 = t1
  store s3 2
  // goto l4
  goto l4
  // l5:
  l5:
  // t7 = T2 + 1
  load 1 s2
  s0 = 1
  t2 = s2 + s0
  store t2 11
  // T2 = t7
  s2 = t2
  store s2 1
  // goto l2
  goto l2
  // l3:
  l3:
  // t8 = T1 + 1
  load 0 s1
  s0 = 1
  t3 = s1 + s0
  store t3 12
  // T1 = t8
  s1 = t3
  store s1 0
  // goto l0
  goto l0
  // l1:
  l1:
  // return 0
  a0 = 0
  return
  // return 0
  a0 = 0
  return
end f_main
