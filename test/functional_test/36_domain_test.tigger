  v0 = malloc 8

f_func [ 1 ] [ 21 ]
  store s0 0
  store s1 1
  store s2 2
  store s3 3
  store s4 4
  store s5 5
  store s6 6
  store s7 7
  store s8 8
  store s9 9
  store s10 10
  store s11 11
  // t0 = 0
  s1 = 0
  store s1 12
  // t1 = 0 * 1
  s0 = 1
  s2 = x0 * s0
  store s2 13
  // t0 = t0 + t1
  s1 = s1 + s2
  store s1 12
  // t0 = t0 * 4
  s0 = 4
  s1 = s1 * s0
  store s1 12
  // T0 [ t0 ] = 1
  s11 = 1
  loadaddr v0 s0
  s10 = s0 + s1
  s10 [ 0 ] = s11
  // t3 = 0
  s4 = 0
  store s4 14
  // t4 = 0 * 1
  s3 = 1
  s5 = x0 * s3
  store s5 15
  // t3 = t3 + t4
  s4 = s4 + s5
  store s4 14
  // t3 = t3 * 4
  s3 = 4
  s4 = s4 * s3
  store s4 14
  // t5 = T0 [ t3 ]
  s10 = s0 + s4
  s6 = s10 [ 0 ]
  store s6 16
  // t2 = 3 - t5
  s3 = 3
  s3 = s3 - s6
  store s3 17
  // t6 = 0
  s7 = 0
  store s7 18
  // t7 = t2 * 1
  s8 = 1
  s8 = s3 * s8
  store s8 19
  // t6 = t6 + t7
  s7 = s7 + s8
  store s7 18
  // t6 = t6 * 4
  s9 = 4
  s7 = s7 * s9
  store s7 18
  // t8 = p0 [ t6 ]
  s10 = a0 + s7
  s9 = s10 [ 0 ]
  store s9 20
  // return t8
  a0 = s9
  load 0 s0
  load 1 s1
  load 2 s2
  load 3 s3
  load 4 s4
  load 5 s5
  load 6 s6
  load 7 s7
  load 8 s8
  load 9 s9
  load 10 s10
  load 11 s11
  return
  // return 0
  a0 = 0
  load 0 s0
  load 1 s1
  load 2 s2
  load 3 s3
  load 4 s4
  load 5 s5
  load 6 s6
  load 7 s7
  load 8 s8
  load 9 s9
  load 10 s10
  load 11 s11
  return
end f_func

f_main [ 0 ] [ 30 ]
  // t9 = 0
  t3 = 0
  store t3 19
  // t10 = 0 * 1
  s0 = 1
  s2 = x0 * s0
  store s2 20
  // t9 = t9 + t10
  t3 = t3 + s2
  store t3 19
  // t9 = t9 * 4
  s0 = 4
  t3 = t3 * s0
  store t3 19
  // t11 = -1
  s0 = 1
  s3 = - s0
  store s3 21
  // T2 [ t9 ] = t11
  loadaddr 16 s10
  s10 = s10 + t3
  s10 [ 0 ] = s3
  // t12 = 0
  s4 = 0
  store s4 22
  // t13 = 1 * 1
  s0 = 1
  s1 = 1
  s5 = s0 * s1
  store s5 23
  // t12 = t12 + t13
  s4 = s4 + s5
  store s4 22
  // t12 = t12 * 4
  s0 = 4
  s4 = s4 * s0
  store s4 22
  // T2 [ t12 ] = 4
  s11 = 4
  loadaddr 16 s10
  s10 = s10 + s4
  s10 [ 0 ] = s11
  // t14 = 0
  s6 = 0
  store s6 24
  // t15 = 2 * 1
  s0 = 2
  s1 = 1
  s7 = s0 * s1
  store s7 25
  // t14 = t14 + t15
  s6 = s6 + s7
  store s6 24
  // t14 = t14 * 4
  s0 = 4
  s6 = s6 * s0
  store s6 24
  // T2 [ t14 ] = 8
  s11 = 8
  loadaddr 16 s10
  s10 = s10 + s6
  s10 [ 0 ] = s11
  // param T2
  // t16 = call f_func
  store t0 0
  store t1 1
  store t2 2
  store t3 3
  store t4 4
  store t5 5
  store t6 6
  store a0 7
  store a1 8
  store a2 9
  store a3 10
  store a4 11
  store a5 12
  store a6 13
  store a7 14
  loadaddr 16 a0
  call f_func
  load 0 t0
  load 1 t1
  load 2 t2
  load 3 t3
  load 4 t4
  load 5 t5
  load 6 t6
  load 8 a1
  load 9 a2
  load 10 a3
  load 11 a4
  load 12 a5
  load 13 a6
  load 14 a7
  s8 = a0
  load 7 a0
  // T1 = t16
  s0 = s8
  store s0 15
  // t18 = 0
  t0 = 0
  store t0 26
  // t19 = 1 * 1
  s1 = 1
  s9 = 1
  t1 = s1 * s9
  store t1 27
  // t18 = t18 + t19
  t0 = t0 + t1
  store t0 26
  // t18 = t18 * 4
  s1 = 4
  t0 = t0 * s1
  store t0 26
  // t20 = T2 [ t18 ]
  loadaddr 16 s10
  s10 = s10 + t0
  t2 = s10 [ 0 ]
  store t2 28
  // t17 = T1 + t20
  s9 = s0 + t2
  store s9 29
  // return t17
  a0 = s9
  return
  // return 0
  a0 = 0
  return
end f_main
