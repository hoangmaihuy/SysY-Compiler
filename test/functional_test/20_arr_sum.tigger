  v0 = malloc 20

f_main [ 0 ] [ 34 ]
  // t0 = 0
  s0 = 0
  store s0 21
  // t1 = 0 * 1
  s1 = 1
  s1 = x0 * s1
  store s1 20
  // t0 = t0 + t1
  s0 = s0 + s1
  store s0 21
  // t0 = t0 * 4
  s2 = 4
  s0 = s0 * s2
  store s0 21
  // t2 = call f_getint
  store t0 0
  store t1 1
  store t2 2
  store t3 3
  store t4 4
  store t5 5
  store t6 6
  store a0 7
  store a1 8
  store a2 9
  store a3 10
  store a4 11
  store a5 12
  store a6 13
  store a7 14
  call f_getint
  load 0 t0
  load 1 t1
  load 2 t2
  load 3 t3
  load 4 t4
  load 5 t5
  load 6 t6
  load 8 a1
  load 9 a2
  load 10 a3
  load 11 a4
  load 12 a5
  load 13 a6
  load 14 a7
  s9 = a0
  load 7 a0
  // T0 [ t0 ] = t2
  loadaddr v0 t2
  s10 = t2 + s0
  s10 [ 0 ] = s9
  // t3 = 0
  s7 = 0
  store s7 22
  // t4 = 1 * 1
  s2 = 1
  s3 = 1
  s6 = s2 * s3
  store s6 23
  // t3 = t3 + t4
  s7 = s7 + s6
  store s7 22
  // t3 = t3 * 4
  s2 = 4
  s7 = s7 * s2
  store s7 22
  // t5 = call f_getint
  store t0 0
  store t1 1
  store t2 2
  store t3 3
  store t4 4
  store t5 5
  store t6 6
  store a0 7
  store a1 8
  store a2 9
  store a3 10
  store a4 11
  store a5 12
  store a6 13
  store a7 14
  call f_getint
  load 0 t0
  load 1 t1
  load 2 t2
  load 3 t3
  load 4 t4
  load 5 t5
  load 6 t6
  load 8 a1
  load 9 a2
  load 10 a3
  load 11 a4
  load 12 a5
  load 13 a6
  load 14 a7
  s5 = a0
  load 7 a0
  // T0 [ t3 ] = t5
  s10 = t2 + s7
  s10 [ 0 ] = s5
  // t6 = 0
  s4 = 0
  store s4 24
  // t7 = 2 * 1
  s2 = 2
  s3 = 1
  s3 = s2 * s3
  store s3 25
  // t6 = t6 + t7
  s4 = s4 + s3
  store s4 24
  // t6 = t6 * 4
  s2 = 4
  s4 = s4 * s2
  store s4 24
  // t8 = call f_getint
  store t0 0
  store t1 1
  store t2 2
  store t3 3
  store t4 4
  store t5 5
  store t6 6
  store a0 7
  store a1 8
  store a2 9
  store a3 10
  store a4 11
  store a5 12
  store a6 13
  store a7 14
  call f_getint
  load 0 t0
  load 1 t1
  load 2 t2
  load 3 t3
  load 4 t4
  load 5 t5
  load 6 t6
  load 8 a1
  load 9 a2
  load 10 a3
  load 11 a4
  load 12 a5
  load 13 a6
  load 14 a7
  s2 = a0
  load 7 a0
  // T0 [ t6 ] = t8
  s10 = t2 + s4
  s10 [ 0 ] = s2
  // t9 = 0
  store s1 20
  s1 = 0
  store s1 26
  // t10 = 3 * 1
  s8 = 3
  t0 = 1
  s8 = s8 * t0
  store s8 19
  // t9 = t9 + t10
  s1 = s1 + s8
  store s1 26
  // t9 = t9 * 4
  t0 = 4
  s1 = s1 * t0
  store s1 26
  // t11 = call f_getint
  store t0 0
  store t1 1
  store t2 2
  store t3 3
  store t4 4
  store t5 5
  store t6 6
  store a0 7
  store a1 8
  store a2 9
  store a3 10
  store a4 11
  store a5 12
  store a6 13
  store a7 14
  call f_getint
  load 0 t0
  load 1 t1
  load 2 t2
  load 3 t3
  load 4 t4
  load 5 t5
  load 6 t6
  load 8 a1
  load 9 a2
  load 10 a3
  load 11 a4
  load 12 a5
  load 13 a6
  load 14 a7
  t0 = a0
  load 7 a0
  // T0 [ t9 ] = t11
  s10 = t2 + s1
  s10 [ 0 ] = t0
  // t12 = 0
  t1 = 0
  store t1 17
  // t13 = 4 * 1
  t3 = 4
  t4 = 1
  t6 = t3 * t4
  store t6 27
  // t12 = t12 + t13
  t1 = t1 + t6
  store t1 17
  // t12 = t12 * 4
  t3 = 4
  t1 = t1 * t3
  store t1 17
  // t14 = call f_getint
  store t0 0
  store t1 1
  store t2 2
  store t3 3
  store t4 4
  store t5 5
  store t6 6
  store a0 7
  store a1 8
  store a2 9
  store a3 10
  store a4 11
  store a5 12
  store a6 13
  store a7 14
  call f_getint
  load 0 t0
  load 1 t1
  load 2 t2
  load 3 t3
  load 4 t4
  load 5 t5
  load 6 t6
  load 8 a1
  load 9 a2
  load 10 a3
  load 11 a4
  load 12 a5
  load 13 a6
  load 14 a7
  t5 = a0
  load 7 a0
  // T0 [ t12 ] = t14
  s10 = t2 + t1
  s10 [ 0 ] = t5
  // T1 = 4
  t3 = 4
  store t3 15
  // T2 = 0
  t4 = 0
  store t4 16
  // l0:
  l0:
  // t15 = T1 > 1
  load 15 s0
  s1 = 1
  t4 = s0 > s1
  store t4 28
  // if t15 == 0 goto l1
  if t4 == x0 goto l1
  // t17 = 0
  s0 = 0
  store s0 29
  // t18 = T1 * 1
  load 15 s1
  s2 = 1
  t1 = s1 * s2
  store t1 30
  // t17 = t17 + t18
  s0 = s0 + t1
  store s0 29
  // t17 = t17 * 4
  s2 = 4
  s0 = s0 * s2
  store s0 29
  // t19 = T0 [ t17 ]
  loadaddr v0 t2
  s10 = t2 + s0
  t0 = s10 [ 0 ]
  store t0 31
  // t16 = T2 + t19
  load 16 s2
  t3 = s2 + t0
  store t3 32
  // T2 = t16
  s2 = t3
  store s2 16
  // t20 = T1 - 1
  s3 = 1
  s8 = s1 - s3
  store s8 33
  // T1 = t20
  s1 = s8
  store s1 15
  // goto l0
  goto l0
  // l1:
  l1:
  // return T2
  load 16 s0
  a0 = s0
  return
  // return 0
  a0 = 0
  return
end f_main
