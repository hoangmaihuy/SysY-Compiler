  v0 = 0
  v1 = malloc 40

f_main [ 0 ] [ 6 ]
  // T0 = 5
  s7 = 5
  loadaddr v0 s10
  s10 [ 0 ] = s7
  // T1 [ 0 ] = 0
  s11 = 0
  loadaddr v1 s6
  s6 [ 0 ] = s11
  // T1 [ 4 ] = 0
  s11 = 0
  s6 [ 4 ] = s11
  // T1 [ 8 ] = 0
  s11 = 0
  s6 [ 8 ] = s11
  // T1 [ 12 ] = 0
  s11 = 0
  s6 [ 12 ] = s11
  // T1 [ 16 ] = 0
  s11 = 0
  s6 [ 16 ] = s11
  // T1 [ 20 ] = 0
  s11 = 0
  s6 [ 20 ] = s11
  // T1 [ 24 ] = 0
  s11 = 0
  s6 [ 24 ] = s11
  // T1 [ 28 ] = 0
  s11 = 0
  s6 [ 28 ] = s11
  // T1 [ 32 ] = 0
  s11 = 0
  s6 [ 32 ] = s11
  // T1 [ 36 ] = 0
  s11 = 0
  s6 [ 36 ] = s11
  // T1 [ 0 ] = 0
  s11 = 0
  s6 [ 0 ] = s11
  // T1 [ 4 ] = 1
  s11 = 1
  s6 [ 4 ] = s11
  // T1 [ 8 ] = 2
  s11 = 2
  s6 [ 8 ] = s11
  // T1 [ 12 ] = 3
  s11 = 3
  s6 [ 12 ] = s11
  // T1 [ 16 ] = 4
  s11 = 4
  s6 [ 16 ] = s11
  // T1 [ 20 ] = 5
  s11 = 5
  s6 [ 20 ] = s11
  // T1 [ 24 ] = 6
  s11 = 6
  s6 [ 24 ] = s11
  // T1 [ 28 ] = 7
  s11 = 7
  s6 [ 28 ] = s11
  // T1 [ 32 ] = 8
  s11 = 8
  s6 [ 32 ] = s11
  // T1 [ 36 ] = 9
  s11 = 9
  s6 [ 36 ] = s11
  // T2 = 0
  s5 = 0
  store s5 0
  // l0:
  l0:
  // t0 = 0
  s4 = 0
  store s4 1
  // t1 = T2 * 1
  load 0 s5
  s0 = 1
  s3 = s5 * s0
  store s3 2
  // t0 = t0 + t1
  s4 = s4 + s3
  store s4 1
  // t0 = t0 * 4
  s0 = 4
  s4 = s4 * s0
  store s4 1
  // t2 = T1 [ t0 ]
  loadaddr v1 s6
  s10 = s6 + s4
  s2 = s10 [ 0 ]
  store s2 3
  // t3 = t2 <= T0
  load v0 s7
  s1 = s2 <= s7
  store s1 4
  // if t3 == 0 goto l1
  if s1 == x0 goto l1
  // t4 = T2 + 1
  load 0 s5
  s0 = 1
  s0 = s5 + s0
  store s0 5
  // T2 = t4
  s5 = s0
  store s5 0
  // goto l0
  goto l0
  // l1:
  l1:
  // return T2
  load 0 s5
  a0 = s5
  return
  // return 0
  a0 = 0
  return
end f_main
