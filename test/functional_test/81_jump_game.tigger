
f_canJump [ 2 ] [ 66 ]
  store s0 0
  store s1 1
  store s2 2
  store s3 3
  store s4 4
  store s5 5
  store s6 6
  store s7 7
  store s8 8
  store s9 9
  store s10 10
  store s11 11
  // t0 = p1 == 1
  s0 = 1
  s0 = a1 == s0
  store s0 31
  // if t0 == 0 goto l0
  if s0 == x0 goto l0
  // return 1
  a0 = 1
  load 0 s0
  load 1 s1
  load 2 s2
  load 3 s3
  load 4 s4
  load 5 s5
  load 6 s6
  load 7 s7
  load 8 s8
  load 9 s9
  load 10 s10
  load 11 s11
  return
  // l0:
  l0:
  // t1 = 0
  s0 = 0
  store s0 32
  // t2 = 0 * 1
  s1 = 1
  s1 = x0 * s1
  store s1 42
  // t1 = t1 + t2
  s0 = s0 + s1
  store s0 32
  // t1 = t1 * 4
  s2 = 4
  s0 = s0 * s2
  store s0 32
  // t3 = p0 [ t1 ]
  s10 = a0 + s0
  s4 = s10 [ 0 ]
  store s4 49
  // t5 = p1 - 2
  s2 = 2
  s2 = a1 - s2
  store s2 25
  // t4 = t3 > t5
  t5 = s4 > s2
  store t5 50
  // if t4 == 0 goto l1
  if t5 == x0 goto l1
  // return 1
  a0 = 1
  load 0 s0
  load 1 s1
  load 2 s2
  load 3 s3
  load 4 s4
  load 5 s5
  load 6 s6
  load 7 s7
  load 8 s8
  load 9 s9
  load 10 s10
  load 11 s11
  return
  // l1:
  l1:
  // T1 = 0
  s0 = 0
  store s0 22
  // l2:
  l2:
  // t7 = p1 - 1
  s0 = 1
  s0 = a1 - s0
  store s0 27
  // t6 = T1 < t7
  load 22 s1
  s2 = s1 < s0
  store s2 26
  // if t6 == 0 goto l3
  if s2 == x0 goto l3
  // t8 = 0
  s0 = 0
  store s0 28
  // t9 = T1 * 1
  load 22 s1
  s2 = 1
  s2 = s1 * s2
  store s2 29
  // t8 = t8 + t9
  s0 = s0 + s2
  store s0 28
  // t8 = t8 * 4
  s3 = 4
  s0 = s0 * s3
  store s0 28
  // T0 [ t8 ] = 0
  s11 = 0
  loadaddr 12 s10
  s10 = s10 + s0
  s10 [ 0 ] = s11
  // t10 = T1 + 1
  s3 = 1
  s3 = s1 + s3
  store s3 33
  // T1 = t10
  s1 = s3
  store s1 22
  // goto l2
  goto l2
  // l3:
  l3:
  // t11 = p1 - 1
  s0 = 1
  s0 = a1 - s0
  store s0 34
  // t12 = 0
  s1 = 0
  store s1 35
  // t13 = t11 * 1
  s2 = 1
  s2 = s0 * s2
  store s2 36
  // t12 = t12 + t13
  s1 = s1 + s2
  store s1 35
  // t12 = t12 * 4
  s3 = 4
  s1 = s1 * s3
  store s1 35
  // T0 [ t12 ] = 1
  s11 = 1
  loadaddr 12 s10
  s10 = s10 + s1
  s10 [ 0 ] = s11
  // t14 = p1 - 2
  s3 = 2
  s3 = a1 - s3
  store s3 37
  // T1 = t14
  s4 = s3
  store s4 22
  // l4:
  l4:
  // t16 = -1
  s0 = 1
  s0 = - s0
  store s0 30
  // t15 = T1 > t16
  load 22 s1
  s2 = s1 > s0
  store s2 38
  // if t15 == 0 goto l5
  if s2 == x0 goto l5
  // t17 = 0
  s0 = 0
  store s0 39
  // t18 = T1 * 1
  load 22 s1
  s2 = 1
  s2 = s1 * s2
  store s2 40
  // t17 = t17 + t18
  s0 = s0 + s2
  store s0 39
  // t17 = t17 * 4
  s3 = 4
  s0 = s0 * s3
  store s0 39
  // t19 = p0 [ t17 ]
  s10 = a0 + s0
  s3 = s10 [ 0 ]
  store s3 41
  // t21 = p1 - 1
  s4 = 1
  s4 = a1 - s4
  store s4 44
  // t22 = t21 - T1
  s5 = s4 - s1
  store s5 45
  // t20 = t19 < t22
  s6 = s3 < s5
  store s6 43
  // if t20 == 0 goto l6
  if s6 == x0 goto l6
  // t23 = 0
  s0 = 0
  store s0 46
  // t24 = T1 * 1
  load 22 s1
  s2 = 1
  s2 = s1 * s2
  store s2 47
  // t23 = t23 + t24
  s0 = s0 + s2
  store s0 46
  // t23 = t23 * 4
  s3 = 4
  s0 = s0 * s3
  store s0 46
  // t25 = p0 [ t23 ]
  s10 = a0 + s0
  s3 = s10 [ 0 ]
  store s3 48
  // T2 = t25
  s4 = s3
  store s4 23
  // goto l7
  goto l7
  // l6:
  l6:
  // t26 = p1 - 1
  s0 = 1
  t2 = a1 - s0
  store t2 51
  // t27 = t26 - T1
  load 22 s0
  s1 = t2 - s0
  store s1 52
  // T2 = t27
  s2 = s1
  store s2 23
  // l7:
  l7:
  // l8:
  l8:
  // t29 = -1
  s0 = 1
  s3 = - s0
  store s3 53
  // t28 = T2 > t29
  load 23 s0
  s2 = s0 > s3
  store s2 54
  // if t28 == 0 goto l9
  if s2 == x0 goto l9
  // t30 = T1 + T2
  load 22 s0
  load 23 s1
  s5 = s0 + s1
  store s5 55
  // t31 = 0
  s6 = 0
  store s6 56
  // t32 = t30 * 1
  s2 = 1
  s7 = s5 * s2
  store s7 57
  // t31 = t31 + t32
  s6 = s6 + s7
  store s6 56
  // t31 = t31 * 4
  s2 = 4
  s6 = s6 * s2
  store s6 56
  // t33 = T0 [ t31 ]
  loadaddr 12 s10
  s10 = s10 + s6
  s8 = s10 [ 0 ]
  store s8 58
  // t34 = t33 != 0
  s9 = s8 != x0
  store s9 59
  // if t34 == 0 goto l10
  if s9 == x0 goto l10
  // t35 = 0
  t0 = 0
  store t0 60
  // t36 = T1 * 1
  load 22 s0
  s1 = 1
  t1 = s0 * s1
  store t1 61
  // t35 = t35 + t36
  t0 = t0 + t1
  store t0 60
  // t35 = t35 * 4
  s1 = 4
  t0 = t0 * s1
  store t0 60
  // T0 [ t35 ] = 1
  s11 = 1
  loadaddr 12 s10
  s10 = s10 + t0
  s10 [ 0 ] = s11
  // l10:
  l10:
  // t37 = T2 - 1
  load 23 s0
  s1 = 1
  store s0 23
  s0 = s0 - s1
  store s0 62
  // T2 = t37
  s1 = s0
  store s1 23
  // goto l8
  goto l8
  // l9:
  l9:
  // t38 = T1 - 1
  load 22 s0
  s1 = 1
  t3 = s0 - s1
  store t3 63
  // T1 = t38
  s0 = t3
  store s0 22
  // goto l4
  goto l4
  // l5:
  l5:
  // t39 = 0
  t4 = 0
  store t4 64
  // t40 = 0 * 1
  s0 = 1
  t6 = x0 * s0
  store t6 65
  // t39 = t39 + t40
  t4 = t4 + t6
  store t4 64
  // t39 = t39 * 4
  s0 = 4
  t4 = t4 * s0
  store t4 64
  // t41 = T0 [ t39 ]
  loadaddr 12 s10
  s10 = s10 + t4
  s0 = s10 [ 0 ]
  store s0 24
  // return t41
  a0 = s0
  load 0 s0
  load 1 s1
  load 2 s2
  load 3 s3
  load 4 s4
  load 5 s5
  load 6 s6
  load 7 s7
  load 8 s8
  load 9 s9
  load 10 s10
  load 11 s11
  return
  // return 0
  a0 = 0
  load 0 s0
  load 1 s1
  load 2 s2
  load 3 s3
  load 4 s4
  load 5 s5
  load 6 s6
  load 7 s7
  load 8 s8
  load 9 s9
  load 10 s10
  load 11 s11
  return
end f_canJump

f_main [ 0 ] [ 46 ]
  // t42 = 0
  s0 = 0
  store s0 30
  // t43 = 0 * 1
  s1 = 1
  s1 = x0 * s1
  store s1 29
  // t42 = t42 + t43
  s0 = s0 + s1
  store s0 30
  // t42 = t42 * 4
  s2 = 4
  s0 = s0 * s2
  store s0 30
  // T4 [ t42 ] = 3
  s11 = 3
  loadaddr 16 s10
  s10 = s10 + s0
  s10 [ 0 ] = s11
  // t44 = 0
  s2 = 0
  store s2 28
  // t45 = 1 * 1
  s3 = 1
  s4 = 1
  s3 = s3 * s4
  store s3 27
  // t44 = t44 + t45
  s2 = s2 + s3
  store s2 28
  // t44 = t44 * 4
  s4 = 4
  s2 = s2 * s4
  store s2 28
  // T4 [ t44 ] = 3
  s11 = 3
  loadaddr 16 s10
  s10 = s10 + s2
  s10 [ 0 ] = s11
  // t46 = 0
  s4 = 0
  store s4 26
  // t47 = 2 * 1
  s5 = 2
  s6 = 1
  t6 = s5 * s6
  store t6 31
  // t46 = t46 + t47
  s4 = s4 + t6
  store s4 26
  // t46 = t46 * 4
  s5 = 4
  s4 = s4 * s5
  store s4 26
  // T4 [ t46 ] = 9
  s11 = 9
  loadaddr 16 s10
  s10 = s10 + s4
  s10 [ 0 ] = s11
  // t48 = 0
  t5 = 0
  store t5 32
  // t49 = 3 * 1
  s5 = 3
  s6 = 1
  t4 = s5 * s6
  store t4 33
  // t48 = t48 + t49
  t5 = t5 + t4
  store t5 32
  // t48 = t48 * 4
  s5 = 4
  t5 = t5 * s5
  store t5 32
  // T4 [ t48 ] = 0
  s11 = 0
  loadaddr 16 s10
  s10 = s10 + t5
  s10 [ 0 ] = s11
  // t50 = 0
  t3 = 0
  store t3 34
  // t51 = 4 * 1
  s5 = 4
  s6 = 1
  store s0 30
  s0 = s5 * s6
  store s0 35
  // t50 = t50 + t51
  t3 = t3 + s0
  store t3 34
  // t50 = t50 * 4
  s5 = 4
  t3 = t3 * s5
  store t3 34
  // T4 [ t50 ] = 0
  s11 = 0
  loadaddr 16 s10
  s10 = s10 + t3
  s10 [ 0 ] = s11
  // t52 = 0
  t1 = 0
  store t1 36
  // t53 = 5 * 1
  s5 = 5
  s6 = 1
  t0 = s5 * s6
  store t0 37
  // t52 = t52 + t53
  t1 = t1 + t0
  store t1 36
  // t52 = t52 * 4
  s5 = 4
  t1 = t1 * s5
  store t1 36
  // T4 [ t52 ] = 1
  s11 = 1
  loadaddr 16 s10
  s10 = s10 + t1
  s10 [ 0 ] = s11
  // t54 = 0
  s9 = 0
  store s9 38
  // t55 = 6 * 1
  s5 = 6
  s6 = 1
  s8 = s5 * s6
  store s8 39
  // t54 = t54 + t55
  s9 = s9 + s8
  store s9 38
  // t54 = t54 * 4
  s5 = 4
  s9 = s9 * s5
  store s9 38
  // T4 [ t54 ] = 1
  s11 = 1
  loadaddr 16 s10
  s10 = s10 + s9
  s10 [ 0 ] = s11
  // t56 = 0
  s7 = 0
  store s7 40
  // t57 = 7 * 1
  s5 = 7
  s6 = 1
  s6 = s5 * s6
  store s6 41
  // t56 = t56 + t57
  s7 = s7 + s6
  store s7 40
  // t56 = t56 * 4
  s5 = 4
  s7 = s7 * s5
  store s7 40
  // T4 [ t56 ] = 5
  s11 = 5
  loadaddr 16 s10
  s10 = s10 + s7
  s10 [ 0 ] = s11
  // t58 = 0
  s5 = 0
  store s5 42
  // t59 = 8 * 1
  t2 = 8
  store s0 35
  s0 = 1
  store s4 26
  s4 = t2 * s0
  store s4 43
  // t58 = t58 + t59
  s5 = s5 + s4
  store s5 42
  // t58 = t58 * 4
  s0 = 4
  s5 = s5 * s0
  store s5 42
  // T4 [ t58 ] = 7
  s11 = 7
  loadaddr 16 s10
  s10 = s10 + s5
  s10 [ 0 ] = s11
  // t60 = 0
  store s3 27
  s3 = 0
  store s3 44
  // t61 = 9 * 1
  s0 = 9
  t2 = 1
  store s2 28
  s2 = s0 * t2
  store s2 45
  // t60 = t60 + t61
  s3 = s3 + s2
  store s3 44
  // t60 = t60 * 4
  s0 = 4
  s3 = s3 * s0
  store s3 44
  // T4 [ t60 ] = 8
  s11 = 8
  loadaddr 16 s10
  s10 = s10 + s3
  s10 [ 0 ] = s11
  // T3 = 10
  t2 = 10
  store t2 15
  // param T4
  // param T3
  // t62 = call f_canJump
  store t0 0
  store t1 1
  store t2 2
  store t3 3
  store t4 4
  store t5 5
  store t6 6
  store a0 7
  store a1 8
  store a2 9
  store a3 10
  store a4 11
  store a5 12
  store a6 13
  store a7 14
  loadaddr 16 a0
  a1 = t2
  call f_canJump
  load 0 t0
  load 1 t1
  load 2 t2
  load 3 t3
  load 4 t4
  load 5 t5
  load 6 t6
  load 8 a1
  load 9 a2
  load 10 a3
  load 11 a4
  load 12 a5
  load 13 a6
  load 14 a7
  store s1 29
  s1 = a0
  load 7 a0
  // T3 = t62
  t2 = s1
  store t2 15
  // return T3
  a0 = t2
  return
  // return 0
  a0 = 0
  return
end f_main
