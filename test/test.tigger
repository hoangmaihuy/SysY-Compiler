  v0 = 0
  v1 = malloc 4194304
  v2 = malloc 4194304

f_transpose [ 3 ] [ 23 ]
  store s0 0
  store s1 1
  store s2 2
  store s3 3
  store s4 4
  store s5 5
  store s6 6
  store s7 7
  store s8 8
  store s9 9
  store s10 10
  store s11 11
  // T1 = 0
  s0 = 0
  store s0 12
  // T1 = 0
  s0 = 0
  store s0 12
  // l0:
  l0:
  // t0 = T1 < p0
  load 12 s0
  s2 = s0 < a0
  store s2 14
  // if t0 == 0 goto l1
  if s2 == x0 goto l1
  // T2 = 0
  s1 = 0
  store s1 13
  // l2:
  l2:
  // t1 = T2 < p0
  load 13 s1
  s3 = s1 < a0
  store s3 15
  // if t1 == 0 goto l3
  if s3 == x0 goto l3
  // t2 = 0
  s4 = 0
  store s4 16
  // t3 = T1 * 1024
  load 12 s0
  s1 = 1024
  s5 = s0 * s1
  store s5 17
  // t2 = t2 + t3
  s4 = s4 + s5
  store s4 16
  // t3 = T2 * 1
  load 13 s1
  s2 = 1
  s5 = s1 * s2
  store s5 17
  // t2 = t2 + t3
  s4 = s4 + s5
  store s4 16
  // t2 = t2 * 4
  s2 = 4
  s4 = s4 * s2
  store s4 16
  // t4 = 0
  s6 = 0
  store s6 18
  // t5 = T2 * 1024
  s2 = 1024
  s7 = s1 * s2
  store s7 19
  // t4 = t4 + t5
  s6 = s6 + s7
  store s6 18
  // t5 = T1 * 1
  s2 = 1
  s7 = s0 * s2
  store s7 19
  // t4 = t4 + t5
  s6 = s6 + s7
  store s6 18
  // t4 = t4 * 4
  s2 = 4
  s6 = s6 * s2
  store s6 18
  // t6 = p1 [ t4 ]
  s10 = a1 + s6
  s8 = s10 [ 0 ]
  store s8 20
  // p2 [ t2 ] = t6
  s10 = a2 + s4
  s10 [ 0 ] = s8
  // t7 = T2 + 1
  s2 = 1
  s9 = s1 + s2
  store s9 21
  // T2 = t7
  s1 = s9
  store s1 13
  // goto l2
  goto l2
  // l3:
  l3:
  // t8 = T1 + 1
  load 12 s0
  s1 = 1
  t0 = s0 + s1
  store t0 22
  // T1 = t8
  s0 = t0
  store s0 12
  // goto l0
  goto l0
  // l1:
  l1:
  // return
  load 0 s0
  load 1 s1
  load 2 s2
  load 3 s3
  load 4 s4
  load 5 s5
  load 6 s6
  load 7 s7
  load 8 s8
  load 9 s9
  load 10 s10
  load 11 s11
  return
end f_transpose

f_main [ 0 ] [ 37 ]
  // T0 = 1024
  t3 = 1024
  loadaddr v0 s10
  s10 [ 0 ] = t3
  // t9 = call f_getint
  store t0 0
  store t1 1
  store t2 2
  store t3 3
  store t4 4
  store t5 5
  store t6 6
  store a0 7
  store a1 8
  store a2 9
  store a3 10
  store a4 11
  store a5 12
  store a6 13
  store a7 14
  call f_getint
  load 0 t0
  load 1 t1
  load 2 t2
  load 3 t3
  load 4 t4
  load 5 t5
  load 6 t6
  load 8 a1
  load 9 a2
  load 10 a3
  load 11 a4
  load 12 a5
  load 13 a6
  load 14 a7
  s1 = a0
  load 7 a0
  // T5 = t9
  s0 = s1
  store s0 15
  // T6 = 0
  s2 = 0
  store s2 16
  // T7 = 0
  s3 = 0
  store s3 17
  // l4:
  l4:
  // t10 = T6 < T5
  load 16 s0
  load 15 s1
  s2 = s0 < s1
  store s2 20
  // if t10 == 0 goto l5
  if s2 == x0 goto l5
  // T7 = 0
  s0 = 0
  store s0 17
  // l6:
  l6:
  // t11 = T7 < T5
  load 17 s0
  load 15 s1
  s2 = s0 < s1
  store s2 19
  // if t11 == 0 goto l7
  if s2 == x0 goto l7
  // t12 = 0
  t6 = 0
  store t6 23
  // t13 = T6 * 1024
  load 16 s0
  s1 = 1024
  t5 = s0 * s1
  store t5 24
  // t12 = t12 + t13
  t6 = t6 + t5
  store t6 23
  // t13 = T7 * 1
  load 17 s1
  s2 = 1
  t5 = s1 * s2
  store t5 24
  // t12 = t12 + t13
  t6 = t6 + t5
  store t6 23
  // t12 = t12 * 4
  s2 = 4
  t6 = t6 * s2
  store t6 23
  // t14 = call f_getint
  store t0 0
  store t1 1
  store t2 2
  store t3 3
  store t4 4
  store t5 5
  store t6 6
  store a0 7
  store a1 8
  store a2 9
  store a3 10
  store a4 11
  store a5 12
  store a6 13
  store a7 14
  call f_getint
  load 0 t0
  load 1 t1
  load 2 t2
  load 3 t3
  load 4 t4
  load 5 t5
  load 6 t6
  load 8 a1
  load 9 a2
  load 10 a3
  load 11 a4
  load 12 a5
  load 13 a6
  load 14 a7
  t4 = a0
  load 7 a0
  // T3 [ t12 ] = t14
  loadaddr v1 s2
  s10 = s2 + t6
  s10 [ 0 ] = t4
  // t15 = T7 + 1
  s3 = 1
  store s0 16
  s0 = s1 + s3
  store s0 25
  // T7 = t15
  s1 = s0
  store s1 17
  // goto l6
  goto l6
  // l7:
  l7:
  // t16 = T6 + 1
  load 16 s0
  s1 = 1
  t2 = s0 + s1
  store t2 26
  // T6 = t16
  s0 = t2
  store s0 16
  // goto l4
  goto l4
  // l5:
  l5:
  // param 34
  // call f__sysy_starttime
  store t0 0
  store t1 1
  store t2 2
  store t3 3
  store t4 4
  store t5 5
  store t6 6
  store a0 7
  store a1 8
  store a2 9
  store a3 10
  store a4 11
  store a5 12
  store a6 13
  store a7 14
  a0 = 34
  call f__sysy_starttime
  load 0 t0
  load 1 t1
  load 2 t2
  load 3 t3
  load 4 t4
  load 5 t5
  load 6 t6
  load 7 a0
  load 8 a1
  load 9 a2
  load 10 a3
  load 11 a4
  load 12 a5
  load 13 a6
  load 14 a7
  // T6 = 0
  s0 = 0
  store s0 16
  // l8:
  l8:
  // t17 = T6 < 500
  load 16 s0
  s1 = 500
  t1 = s0 < s1
  store t1 27
  // if t17 == 0 goto l9
  if t1 == x0 goto l9
  // param T5
  // param T3
  // param T4
  // call f_transpose
  store t0 0
  store t1 1
  store t2 2
  store t3 3
  store t4 4
  store t5 5
  store t6 6
  store a0 7
  store a1 8
  store a2 9
  store a3 10
  store a4 11
  store a5 12
  store a6 13
  store a7 14
  load 15 a0
  loadaddr v1 a1
  loadaddr v2 a2
  call f_transpose
  load 0 t0
  load 1 t1
  load 2 t2
  load 3 t3
  load 4 t4
  load 5 t5
  load 6 t6
  load 7 a0
  load 8 a1
  load 9 a2
  load 10 a3
  load 11 a4
  load 12 a5
  load 13 a6
  load 14 a7
  // param T5
  // param T4
  // param T3
  // call f_transpose
  store t0 0
  store t1 1
  store t2 2
  store t3 3
  store t4 4
  store t5 5
  store t6 6
  store a0 7
  store a1 8
  store a2 9
  store a3 10
  store a4 11
  store a5 12
  store a6 13
  store a7 14
  load 15 a0
  loadaddr v2 a1
  loadaddr v1 a2
  call f_transpose
  load 0 t0
  load 1 t1
  load 2 t2
  load 3 t3
  load 4 t4
  load 5 t5
  load 6 t6
  load 7 a0
  load 8 a1
  load 9 a2
  load 10 a3
  load 11 a4
  load 12 a5
  load 13 a6
  load 14 a7
  // t18 = T6 + 1
  load 16 s0
  s1 = 1
  t0 = s0 + s1
  store t0 28
  // T6 = t18
  s0 = t0
  store s0 16
  // goto l8
  goto l8
  // l9:
  l9:
  // T8 = 0
  s0 = 0
  store s0 18
  // T6 = 0
  s1 = 0
  store s1 16
  // l10:
  l10:
  // t19 = T6 < T5
  load 16 s0
  load 15 s1
  s9 = s0 < s1
  store s9 29
  // if t19 == 0 goto l11
  if s9 == x0 goto l11
  // T7 = 0
  s0 = 0
  store s0 17
  // l12:
  l12:
  // t20 = T7 < T5
  load 17 s0
  load 15 s1
  s8 = s0 < s1
  store s8 30
  // if t20 == 0 goto l13
  if s8 == x0 goto l13
  // t22 = 0
  s6 = 0
  store s6 31
  // t23 = T6 * 1024
  load 16 s0
  s1 = 1024
  s5 = s0 * s1
  store s5 32
  // t22 = t22 + t23
  s6 = s6 + s5
  store s6 31
  // t23 = T7 * 1
  load 17 s1
  s2 = 1
  s5 = s1 * s2
  store s5 32
  // t22 = t22 + t23
  s6 = s6 + s5
  store s6 31
  // t22 = t22 * 4
  s2 = 4
  s6 = s6 * s2
  store s6 31
  // t24 = T4 [ t22 ]
  loadaddr v2 s2
  s10 = s2 + s6
  s4 = s10 [ 0 ]
  store s4 33
  // t21 = T8 + t24
  load 18 s3
  s7 = s3 + s4
  store s7 34
  // T8 = t21
  s3 = s7
  store s3 18
  // t25 = T7 + 1
  s8 = 1
  store s3 18
  s3 = s1 + s8
  store s3 35
  // T7 = t25
  s1 = s3
  store s1 17
  // goto l12
  goto l12
  // l13:
  l13:
  // t26 = T6 + 1
  load 16 s0
  s1 = 1
  s2 = s0 + s1
  store s2 36
  // T6 = t26
  s0 = s2
  store s0 16
  // goto l10
  goto l10
  // l11:
  l11:
  // param 51
  // call f__sysy_stoptime
  store t0 0
  store t1 1
  store t2 2
  store t3 3
  store t4 4
  store t5 5
  store t6 6
  store a0 7
  store a1 8
  store a2 9
  store a3 10
  store a4 11
  store a5 12
  store a6 13
  store a7 14
  a0 = 51
  call f__sysy_stoptime
  load 0 t0
  load 1 t1
  load 2 t2
  load 3 t3
  load 4 t4
  load 5 t5
  load 6 t6
  load 7 a0
  load 8 a1
  load 9 a2
  load 10 a3
  load 11 a4
  load 12 a5
  load 13 a6
  load 14 a7
  // param T8
  // call f_putint
  store t0 0
  store t1 1
  store t2 2
  store t3 3
  store t4 4
  store t5 5
  store t6 6
  store a0 7
  store a1 8
  store a2 9
  store a3 10
  store a4 11
  store a5 12
  store a6 13
  store a7 14
  load 18 a0
  call f_putint
  load 0 t0
  load 1 t1
  load 2 t2
  load 3 t3
  load 4 t4
  load 5 t5
  load 6 t6
  load 7 a0
  load 8 a1
  load 9 a2
  load 10 a3
  load 11 a4
  load 12 a5
  load 13 a6
  load 14 a7
  // param 10
  // call f_putch
  store t0 0
  store t1 1
  store t2 2
  store t3 3
  store t4 4
  store t5 5
  store t6 6
  store a0 7
  store a1 8
  store a2 9
  store a3 10
  store a4 11
  store a5 12
  store a6 13
  store a7 14
  a0 = 10
  call f_putch
  load 0 t0
  load 1 t1
  load 2 t2
  load 3 t3
  load 4 t4
  load 5 t5
  load 6 t6
  load 7 a0
  load 8 a1
  load 9 a2
  load 10 a3
  load 11 a4
  load 12 a5
  load 13 a6
  load 14 a7
  // return 0
  a0 = 0
  return
  // return 0
  a0 = 0
  return
end f_main
